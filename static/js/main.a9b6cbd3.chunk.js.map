{"version":3,"sources":["components/EditModal/EditModal.module.css","components/TodoItem.js","components/EditModal/EditModal.js","consts.js","TodoForm/TodoForm.js","components/TodosList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","TodoItem","todo","deleteTodo","dispatch","useContext","Context","title","priority","description","date","toString","onClick","id","type","payload","EditModal","editedTodo","className","styles","editModal","value","PRIORITY_VALUES","TodoForm","state","onSubmit","event","preventDefault","newTodo","uuid","startDate","onChange","target","placeholder","selected","reducer","action","todos","TodoList","editModalOpened","useReducer","Date","idToDelete","newTodos","filter","map","createContext","defalut","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9b6cbd3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"editModal\":\"EditModal_editModal__14M01\"};","import React, { Fragment, useContext } from 'react';\nimport { Context } from '../App';\n\nexport default function TodoItem({ todo, deleteTodo }) {\n  const { dispatch } = useContext(Context);\n\n  function openEditModal() {\n    dispatch({ type: 'openModal', payload: todo.title });\n  }\n  return (\n    <Fragment>\n      <div>TODO: {todo.title}</div>\n      <div>Priority: {todo.priority}</div>\n      <div>Description: {todo.description}</div>\n      <div>Date: {todo.date.toString()}</div>\n      <button onClick={() => deleteTodo(todo.id)}>Delete todo</button>\n      <button onClick={openEditModal}>Edit</button>\n    </Fragment>\n  );\n}\n","import React, { useContext } from 'react';\nimport styles from './EditModal.module.css';\n\nimport { Context } from '../../App';\n\nexport default function EditModal() {\n  const { editedTodo, dispatch } = useContext(Context);\n\n  return (\n    <div className={styles.editModal}>\n      Edit {editedTodo}\n      <input type=\"text\" value={editedTodo} />\n      <button onClick={() => dispatch({ type: 'closeModal' })}>Close</button>\n    </div>\n  );\n}\n","export const PRIORITY_VALUES = {\n  HIGH: 'high',\n  MIDDLE: 'middle',\n  LOW: 'low',\n};\n","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport { v4 as uuid } from 'uuid';\n\nimport { PRIORITY_VALUES } from '../consts';\n\nexport default function TodoForm({ state, dispatch }) {\n  function addTodo(event) {\n    event.preventDefault();\n\n    const newTodo = {\n      id: uuid(),\n      title: state.todo,\n      priority: state.priority,\n      description: state.description,\n      date: state.startDate,\n    };\n    dispatch({ type: 'addNewTodo', payload: newTodo });\n    dispatch({ type: 'reset' });\n  }\n  return (\n    <form onSubmit={addTodo}>\n      <input\n        // style={error ? { border: '1px solid red' } : {}}\n        onChange={(event) =>\n          dispatch({ type: 'updateTodo', payload: event.target.value })\n        }\n        placeholder=\"Enter your todo\"\n        value={state.todo}\n      />\n      {/* {Boolean(error) ? <div>{error}</div> : null} */}\n      <br />\n      <select\n        value={state.priority}\n        onChange={(event) =>\n          dispatch({ type: 'updatePriority', payload: event.target.value })\n        }\n      >\n        <option value={PRIORITY_VALUES.HIGH}>High</option>\n        <option value={PRIORITY_VALUES.MIDDLE}>Middle</option>\n        <option value={PRIORITY_VALUES.LOW}>Low</option>\n      </select>\n      <br />\n      <textarea\n        value={state.description}\n        onChange={(event) =>\n          dispatch({ type: 'updateDescription', payload: event.target.value })\n        }\n        placeholder=\"Enter your description\"\n      ></textarea>\n      <br />\n      <DatePicker\n        selected={state.startDate}\n        onChange={(date) =>\n          dispatch({ type: 'updateStartDate', payload: date })\n        }\n      />\n      <br />\n      <button>Add</button>\n    </form>\n  );\n}\n","import React, { useContext, useReducer } from 'react';\n\nimport TodoItem from './TodoItem';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { EditModal } from './EditModal';\nimport { Context } from '../App.js';\nimport { PRIORITY_VALUES } from '../consts';\nimport TodoForm from '../TodoForm/TodoForm';\n\n//function that return new state\n// action {type, payload}\n// reducer(currentState, {type, paylod})\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'updateTodo':\n      return { ...state, todo: action.payload };\n    case 'updateTodos':\n      return { ...state, todos: action.payload };\n    case 'addNewTodo':\n      return { ...state, todos: [...state.todos, action.payload] };\n    case 'updateStartDate':\n      return { ...state, startDate: action.payload };\n    case 'updatePriority':\n      return { ...state, priority: action.payload };\n    case 'updateDescription':\n      return { ...state, description: action.payload };\n    case 'reset':\n      return {\n        ...state,\n        description: '',\n        priority: PRIORITY_VALUES.HIGH,\n        todo: '',\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function TodoList() {\n  const { editModalOpened } = useContext(Context);\n\n  const [state, dispatch] = useReducer(reducer, {\n    todo: '',\n    todos: [],\n    startDate: new Date(),\n    priority: '',\n    description: '',\n  });\n\n  function deleteTodo(idToDelete) {\n    const newTodos = state.todos.filter((todo) => todo.id !== idToDelete);\n    dispatch({ type: 'updateTodos', payload: newTodos });\n  }\n\n  // function handleTodoInput(event) {\n  //   disp(event.target.value);\n  // if (todo.length < 6) {\n  //   setError('todo must be at least 6 chars');\n  // } else {\n  //   setError(null);\n  // }\n  // }\n\n  return (\n    <>\n      <TodoForm state={state} dispatch={dispatch} />\n      {state.todos.map((todo) => {\n        return <TodoItem key={todo.id} todo={todo} deleteTodo={deleteTodo} />;\n      })}\n      {editModalOpened ? <EditModal /> : null}\n    </>\n  );\n}\n","import React, { createContext, useReducer } from 'react';\nimport TodoList from './components/TodosList';\n\nexport const Context = createContext({ defalut: 'default' });\n\n// use context for edite todo & try to rewrite it to reducer\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'openModal':\n      return { ...state, editModalOpened: true, editedTodo: action.payload };\n    case 'closeModal':\n      return { ...state, editModalOpened: false, editedTodo: null };\n    default:\n      return { ...state };\n  }\n}\nfunction App() {\n  // const [editModalOpened, setEditModalOpened] = useState(false);\n  // const [editedTodo, setEditedTodo] = useState();\n  const [state, dispatch] = useReducer(reducer, {\n    editModalOpened: false,\n    editedTodo: null,\n  });\n  return (\n    <Context.Provider\n      value={{\n        ...state,\n        dispatch,\n      }}\n    >\n      <TodoList />\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}